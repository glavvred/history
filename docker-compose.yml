version: '3'

services:
#  database:
#    image: postgres:${POSTGRES_VERSION:-16}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    healthcheck:
#      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
#      timeout: 5s
#      retries: 5
#      start_period: 60s
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#    networks:
#      - app_network
  database:
    image: mysql:${MYSQL_VERSION:-8.0}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-!ChangeMe!}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/mysql:rw
    networks:
      - app_network

  php:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_ENV=dev
#      - DATABASE_URL=postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?charset=utf8
      - DATABASE_URL=mysql://${MYSQL_USER:-app}:${MYSQL_PASSWORD:-!ChangeMe!}@database:3306/${MYSQL_DATABASE:-app}
    networks:
      - app_network
    depends_on:
      - database

  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network
    depends_on:
      - php

volumes:
  database_data:

networks:
  app_network:
    driver: bridge